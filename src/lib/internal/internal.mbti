package kcn-judu/calculus-numerical/lib/internal

// Values
let integer_one : Integer

let integer_zero : Integer

let machine_dbl_epsilon : Double

let machine_dbl_max : Double

let machine_dbl_min : Double

let machine_flt_epsilon : Double

let machine_flt_max : Double

let machine_flt_min : Double

let machine_log_dbl_epsilon : Double

let machine_log_dbl_max : Double

let machine_log_dbl_min : Double

let machine_log_eps : Double

let machine_log_flt_epsilon : Double

let machine_log_flt_max : Double

let machine_log_flt_min : Double

let machine_log_sflt_epsilon : Double

let machine_root_3_dbl_epsilon : Double

let machine_root_3_dbl_max : Double

let machine_root_3_dbl_min : Double

let machine_root_3_eps : Double

let machine_root_3_flt_epsilon : Double

let machine_root_3_flt_max : Double

let machine_root_3_flt_min : Double

let machine_root_3_sflt_epsilon : Double

let machine_root_4_dbl_epsilon : Double

let machine_root_4_dbl_max : Double

let machine_root_4_dbl_min : Double

let machine_root_4_eps : Double

let machine_root_4_flt_epsilon : Double

let machine_root_4_flt_max : Double

let machine_root_4_flt_min : Double

let machine_root_4_sflt_epsilon : Double

let machine_root_5_dbl_epsilon : Double

let machine_root_5_dbl_max : Double

let machine_root_5_dbl_min : Double

let machine_root_5_eps : Double

let machine_root_5_flt_epsilon : Double

let machine_root_5_flt_max : Double

let machine_root_5_flt_min : Double

let machine_root_5_sflt_epsilon : Double

let machine_root_6_dbl_epsilon : Double

let machine_root_6_dbl_max : Double

let machine_root_6_dbl_min : Double

let machine_root_6_eps : Double

let machine_root_6_flt_epsilon : Double

let machine_root_6_flt_max : Double

let machine_root_6_flt_min : Double

let machine_root_6_sflt_epsilon : Double

let machine_sflt_epsilon : Double

let machine_sqrt_dbl_epsilon : Double

let machine_sqrt_dbl_max : Double

let machine_sqrt_dbl_min : Double

let machine_sqrt_eps : Double

let machine_sqrt_flt_epsilon : Double

let machine_sqrt_flt_max : Double

let machine_sqrt_flt_min : Double

let machine_sqrt_sflt_epsilon : Double

let math_1_pi : Double

let math_2_pi : Double

let math_2_sqrt_pi : Double

let math_e : Double

let math_euler : Double

let math_ln_10 : Double

let math_ln_2 : Double

let math_ln_pi : Double

let math_log_10_e : Double

let math_log_2_e : Double

let math_pi : Double

let math_pi_2 : Double

let math_pi_4 : Double

let math_sqrt_1_2 : Double

let math_sqrt_2 : Double

let math_sqrt_3 : Double

let math_sqrt_pi : Double

fn pow_integer_exp(Double, Integer) -> Double

fn rescale_error(Double, Double, Double) -> Double

// Types and methods
pub(all) enum Integer {
  IntegerInt(Int)
  IntegerInt64(Int64)
  Integer(BigInt)
}

// Type aliases
pub typealias Func_Math = (Double) -> Double

pub typealias Quad_GK = ((Double) -> Double, Double, Double) -> (Double, Double, Double, Double)

// Traits
pub(open) trait Integral : Eq + Compare + Show {
  to_integer(Self) -> Integer
}
impl Integral for Int
impl Integral for Int64
impl Integral for BigInt

